{"version":3,"sources":["components/SetupBreath/SetupBreath.module.scss","components/BreathSpace/BreathSpace.module.scss","containers/App/App.module.scss","utils/reportWebVitals.ts","components/HeroSpace/HeroSpace.tsx","components/BreathSpace/BreathSpace.tsx","components/SetupBreath/SetupBreath.tsx","containers/App/App.tsx","index.tsx","components/HeroSpace/HeroSpace.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HeroSpace","props","openConfigOpen","useState","isLoading","setIsLoading","timeline","gsap","paused","heroSpaceRef","useRef","logoRef","buttonRef","useEffect","to","current","duration","opacity","ease","play","className","styles","ref","src","alt","onClick","BreathSpace","SetupBreath","isConfigOpen","closeConfigOpen","formik","useFormik","initialValues","inhaleTime","holdInhaleTime","exhaleTime","holdExhaleTime","time","onSubmit","values","alert","JSON","stringify","useMemo","reversed","setupContainer","form","display","height","backdropFilter","reverse","handleSubmit","classNames","id","name","type","min","max","onChange","handleChange","value","htmlFor","mask","WebFont","load","google","families","App","setConfig","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c82a0757.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Setup\":\"SetupBreath_Setup__33p53\",\"Setup-container\":\"SetupBreath_Setup-container__ye6aT\",\"Setup-left\":\"SetupBreath_Setup-left__3_B96\",\"Setup-right\":\"SetupBreath_Setup-right__23e_K\",\"Setup-title\":\"SetupBreath_Setup-title__1eMrE\",\"Setup-desc\":\"SetupBreath_Setup-desc__9XArU\",\"SetupSummary\":\"SetupBreath_SetupSummary__2OL64\",\"SetupSummary-item\":\"SetupBreath_SetupSummary-item__2t1rh\",\"SetupSummary-value\":\"SetupBreath_SetupSummary-value__5quh-\",\"SetupSummary-sec\":\"SetupBreath_SetupSummary-sec__3Yjtt\",\"SetupSummary-label\":\"SetupBreath_SetupSummary-label__1TtZq\",\"SetupSummary-item--inhale\":\"SetupBreath_SetupSummary-item--inhale__11RNI\",\"SetupSummary-item--holdInhale\":\"SetupBreath_SetupSummary-item--holdInhale__AYdFZ\",\"SetupSummary-item--exhale\":\"SetupBreath_SetupSummary-item--exhale___Cn-7\",\"SetupSummary-item--holdExhale\":\"SetupBreath_SetupSummary-item--holdExhale__3U7pV\",\"SetupForm-submit\":\"SetupBreath_SetupForm-submit__3nU5I\",\"SetupForm\":\"SetupBreath_SetupForm__2G4SQ\",\"SetupFormGroup\":\"SetupBreath_SetupFormGroup__sgyD8\",\"SetupFormGroup-header\":\"SetupBreath_SetupFormGroup-header__3Xg7E\",\"SetupFormGroup-label\":\"SetupBreath_SetupFormGroup-label__3bUrz\",\"SetupFormGroup-label--em\":\"SetupBreath_SetupFormGroup-label--em__2mYWH\",\"SetupFormGroup-content\":\"SetupBreath_SetupFormGroup-content__1fyfy\",\"SetupFormGroup-input\":\"SetupBreath_SetupFormGroup-input__1x_eh\",\"SetupFormGroup-value\":\"SetupBreath_SetupFormGroup-value__N4CxD\",\"SetupFormGroup-seconds\":\"SetupBreath_SetupFormGroup-seconds__2OT7n\",\"SetupFormGroup-number\":\"SetupBreath_SetupFormGroup-number__GFadb\",\"SetupFormGroup-letter\":\"SetupBreath_SetupFormGroup-letter__XZt9O\",\"SetupFormGroup--inhale\":\"SetupBreath_SetupFormGroup--inhale__25VwF\",\"SetupFormGroup--holdInhale\":\"SetupBreath_SetupFormGroup--holdInhale__HfBLf\",\"SetupFormGroup--exhale\":\"SetupBreath_SetupFormGroup--exhale__2K6S1\",\"SetupFormGroup--holdExhale\":\"SetupBreath_SetupFormGroup--holdExhale__2DcR3\",\"SetupTime\":\"SetupBreath_SetupTime__1MwO7\",\"SetupTime-label\":\"SetupBreath_SetupTime-label__2B465\",\"SetupTime-input\":\"SetupBreath_SetupTime-input__1CJdj\",\"Setup-close\":\"SetupBreath_Setup-close__24W_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreathSpace\":\"BreathSpace_BreathSpace__uFSS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2SgUB\"};","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {ReportHandler} from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useEffect, useState, useRef} from \"react\";\nimport {gsap} from \"gsap\";\n\nimport styles from \"./HeroSpace.module.scss\";\n\ntype AppProps = {\n  openConfigOpen: () => void;\n};\n\nconst HeroSpace: React.FC<AppProps> = (props: AppProps) => {\n  const {openConfigOpen} = props;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const timeline = gsap.timeline({paused: true});\n  const heroSpaceRef = useRef(null);\n  const logoRef = useRef(null);\n  const buttonRef = useRef(null);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      timeline\n        .to(heroSpaceRef.current, {\n          duration: 1,\n          opacity: 1,\n          ease: \"power2.inOut\",\n        })\n        .to(logoRef.current, {opacity: 1, duration: 0.5}, 0.2)\n        .to(buttonRef.current, {opacity: 1, duration: 0.6}, 0.2);\n\n      timeline.play();\n    }\n  }, [isLoading, timeline]);\n\n  return isLoading ? (\n    <div className={styles[\"SpinnerWrapper\"]}>\n      <div className={styles[\"Spinner\"]}></div>\n    </div>\n  ) : (\n    <>\n      <main className={styles[\"HeroSpace\"]} ref={heroSpaceRef}>\n        <section className={styles[\"HeroSection\"]}>\n          <img\n            className={styles[\"HeroSection-logo\"]}\n            src=\"/images/Logo.png\"\n            alt=\"logo\"\n            ref={logoRef}\n          />\n          <button\n            className={styles[\"HeroSection-button\"]}\n            ref={buttonRef}\n            onClick={openConfigOpen}\n          >\n            Begin Breathing\n          </button>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default HeroSpace;\n","import React from \"react\";\n\nimport styles from \"./BreathSpace.module.scss\";\n\nconst BreathSpace: React.FC = () => {\n  return <div className={styles[\"BreathSpace\"]}></div>;\n};\n\nexport default BreathSpace;\n","import React, {useEffect, useRef, useMemo} from \"react\";\nimport {gsap} from \"gsap\";\nimport classNames from \"classnames\";\nimport {useFormik} from \"formik\";\nimport MaskedInput from \"react-text-mask\";\n\nimport {FiX} from \"react-icons/fi\";\n\nimport styles from \"./SetupBreath.module.scss\";\n\n// TODO - RDW & Input Validation\n\ntype AppProps = {\n  isConfigOpen: boolean;\n  closeConfigOpen: () => void;\n};\n\nconst SetupBreath: React.FC<AppProps> = (props: AppProps) => {\n  const {isConfigOpen, closeConfigOpen} = props;\n\n  const formik = useFormik({\n    initialValues: {\n      inhaleTime: 5,\n      holdInhaleTime: 5,\n      exhaleTime: 5,\n      holdExhaleTime: 5,\n      time: \"05:00\",\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  const timeline = useMemo(\n    () => gsap.timeline({paused: true, reversed: false}),\n    [],\n  );\n\n  const setupContainer = useRef(null);\n  const form = useRef(null);\n\n  useEffect(() => {\n    timeline\n      .to(setupContainer.current, {display: \"block\", duration: 0})\n      .to(setupContainer.current, {\n        opacity: 1,\n        height: \"100vh\",\n        duration: 0.7,\n        backdropFilter: \"blur(15px)\",\n        ease: \"power2.inOut\",\n      })\n      .to(\n        form.current,\n        {\n          opacity: 1,\n          ease: \"power2.inOut\",\n          duration: 0.7,\n        },\n        0,\n      );\n  }, [timeline, setupContainer, form]);\n\n  useEffect(() => {\n    isConfigOpen ? timeline.play() : timeline.reverse();\n  }, [timeline, isConfigOpen]);\n\n  return (\n    <div className={styles[\"Setup\"]} ref={setupContainer}>\n      <button className={styles[\"Setup-close\"]} onClick={closeConfigOpen}>\n        <FiX />\n      </button>\n      <form\n        ref={form}\n        onSubmit={formik.handleSubmit}\n        className={classNames(\"container\", styles[\"Setup-container\"])}\n      >\n        <h2 className={styles[\"Setup-title\"]}>Setup Details</h2>\n        <p className={styles[\"Setup-desc\"]}>Adjust parameters</p>\n        <div className={styles[\"SetupForm\"]}>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--inhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Inhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"inhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"inhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.inhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"inhaleTime\"\n                  name=\"inhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.inhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--holdInhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Hold Inhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"holdInhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"holdInhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.holdInhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"holdInhaleTime\"\n                  name=\"holdInhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.holdInhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--exhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Exhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"exhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"exhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.exhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"exhaleTime\"\n                  name=\"exhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.exhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--holdExhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Hold Exhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"holdExhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"holdExhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.holdExhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"holdExhaleTime\"\n                  name=\"holdExhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.holdExhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles[\"SetupTime\"]}>\n          <label htmlFor=\"time\" className={styles[\"SetupTime-label\"]}>\n            Time\n          </label>\n          {/* <input\n            id=\"time\"\n            name=\"time\"\n            className={styles[\"SetupTime-input\"]}\n            value={formik.values.time}\n            onChange={formik.handleChange}\n            type=\"text\"\n          /> */}\n          <MaskedInput\n            id=\"time\"\n            name=\"time\"\n            className={styles[\"SetupTime-input\"]}\n            value={formik.values.time}\n            onChange={formik.handleChange}\n            type=\"text\"\n            mask={[/[0-5]/, /[0-9]/, \":\", /[0-5]/, /[0-9]/]}\n          />\n        </div>\n        {/* <div className={styles[\"SetupOverview\"]}>\n          <div className={styles[\"SetupSummary\"]}>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--inhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.inhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Inhale</p>\n            </div>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--holdInhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.holdInhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Hold</p>\n            </div>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--exhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.exhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Exhale</p>\n            </div>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--holdExhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.holdExhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Hold</p>\n            </div>\n          </div>\n        </div> */}\n        <button className={styles[\"SetupForm-submit\"]} type=\"submit\">\n          Start\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SetupBreath;\n","import React, {useState} from \"react\";\nimport WebFont from \"webfontloader\";\n\nimport HeroSpace from \"components/HeroSpace\";\nimport BreathSpace from \"components/BreathSpace\";\nimport SetupBreath from \"components/SetupBreath\";\n\nimport \"styles/main.scss\";\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\nimport styles from \"./App.module.scss\";\n\nWebFont.load({\n  google: {\n    families: [\"Montserrat:400,600,700\"],\n  },\n});\n\nconst App: React.FC = () => {\n  const [isConfigOpen, setConfig] = useState(false);\n\n  const openConfigOpen = () => {\n    setConfig(true);\n  };\n\n  const closeConfigOpen = () => {\n    setConfig(false);\n  };\n\n  return (\n    <div className={styles[\"App\"]}>\n      <HeroSpace openConfigOpen={openConfigOpen} />\n      <BreathSpace />\n      <SetupBreath\n        isConfigOpen={isConfigOpen}\n        closeConfigOpen={closeConfigOpen}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"utils/reportWebVitals\";\n\nimport App from \"containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SpinnerWrapper\":\"HeroSpace_SpinnerWrapper__I86gV\",\"Spinner\":\"HeroSpace_Spinner__3RwwV\",\"sk-scaleout\":\"HeroSpace_sk-scaleout__22-fL\",\"HeroSpace\":\"HeroSpace_HeroSpace__1nSim\",\"HeroSection\":\"HeroSpace_HeroSection__54HVx\",\"HeroSection-logo\":\"HeroSpace_HeroSection-logo__11ihV\",\"HeroSection-button\":\"HeroSpace_HeroSection-button__3YyER\"};"],"sourceRoot":""}