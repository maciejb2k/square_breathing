{"version":3,"sources":["components/BreathSpace/BreathSpace.module.scss","components/HeroSpace/HeroSpace.module.scss","components/SetupBreath/SetupBreath.module.scss","containers/App/App.module.scss","utils/reportWebVitals.ts","components/HeroSpace/HeroSpace.tsx","utils/breathUtils.ts","components/BreathSpace/BreathSpace.tsx","components/SetupBreath/SetupBreath.tsx","containers/App/App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HeroSpace","props","openConfigOpen","useState","isLoading","setIsLoading","timeline","gsap","paused","heroSpaceRef","useRef","logoRef","buttonRef","useEffect","to","current","duration","opacity","ease","play","className","styles","ref","src","alt","onClick","timeToSeconds","time","split","minutes","seconds","Number","BreathSpace","isStarted","settings","stopBreathing","setDuration","boxTimeline","useMemo","repeat","container","barTop","barRight","barBottom","barLeft","indicatorTop","indicatorRight","indicatorBottom","indicatorLeft","refInhale","refHoldInhale","refExhale","refHoldExhale","refTime","Object","keys","length","constructor","console","log","inhaleSeconds","inhaleTime","inhaleHoldSeconds","holdInhaleTime","inhaleHoldExhaleSeconds","exhaleTime","inhaleHoldExhaleHoldSeconds","holdExhaleTime","miliseconds","restart","clearProps","width","height","right","left","bottom","top","delay","classNames","pause","clear","date","Date","now","renderer","completed","SetupBreath","isConfigOpen","closeConfigOpen","setBreathingSettings","startBreathing","formik","useFormik","initialValues","onSubmit","values","reversed","setupContainer","form","display","backdropFilter","reverse","handleSubmit","id","name","type","min","max","onChange","handleChange","value","htmlFor","mask","WebFont","load","google","families","App","setConfig","setIsStarted","setSettings","appContainer","translateY","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e08c5fe0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreathSpace\":\"BreathSpace_BreathSpace__uFSS8\",\"BreathSpace-container\":\"BreathSpace_BreathSpace-container__3MLfG\",\"BreathSpace-header\":\"BreathSpace_BreathSpace-header__T-XvH\",\"BreathSpace-close\":\"BreathSpace_BreathSpace-close__2Wq35\",\"BreathInfo\":\"BreathSpace_BreathInfo__1CziO\",\"BreathText\":\"BreathSpace_BreathText__1zEpQ\",\"BreathText-phase\":\"BreathSpace_BreathText-phase__P_5_f\",\"BreathText-line\":\"BreathSpace_BreathText-line__1SKUM\",\"BreathText-line--inhale\":\"BreathSpace_BreathText-line--inhale__3usha\",\"BreathText-line--holdInhale\":\"BreathSpace_BreathText-line--holdInhale__Oq5Jj\",\"BreathText-line--exhale\":\"BreathSpace_BreathText-line--exhale__3wM3Q\",\"BreathText-line--holdExhale\":\"BreathSpace_BreathText-line--holdExhale__3cEjw\",\"BreathText-tips\":\"BreathSpace_BreathText-tips__2WAZr\",\"BreathVisuals\":\"BreathSpace_BreathVisuals__3gJhS\",\"BreathBox\":\"BreathSpace_BreathBox__Gfszg\",\"BreathBox-bar--inactive\":\"BreathSpace_BreathBox-bar--inactive__ArR-7\",\"BreathBox-barTop\":\"BreathSpace_BreathBox-barTop__3VYSK\",\"BreathBox-barTop--active\":\"BreathSpace_BreathBox-barTop--active__2acHf\",\"BreathBox-barRight\":\"BreathSpace_BreathBox-barRight__3TvaN\",\"BreathBox-barRight--active\":\"BreathSpace_BreathBox-barRight--active__3zIg4\",\"BreathBox-barBottom\":\"BreathSpace_BreathBox-barBottom__Y4v2q\",\"BreathBox-barBottom--active\":\"BreathSpace_BreathBox-barBottom--active__16bzN\",\"BreathBox-barLeft\":\"BreathSpace_BreathBox-barLeft__3UXBq\",\"BreathBox-barLeft--active\":\"BreathSpace_BreathBox-barLeft--active__3Nh2r\",\"BreathBox-timeLeft\":\"BreathSpace_BreathBox-timeLeft__2n4zp\",\"BreathBox-time\":\"BreathSpace_BreathBox-time__1EDN6\",\"BreatBox-time--top\":\"BreathSpace_BreatBox-time--top__2zUWA\",\"BreathIndicators\":\"BreathSpace_BreathIndicators__cmZGI\",\"BreathIndicators-group\":\"BreathSpace_BreathIndicators-group__2zIRw\",\"BreathIndicators-item\":\"BreathSpace_BreathIndicators-item__2Nqlu\",\"BreathIndicators-item--inactive\":\"BreathSpace_BreathIndicators-item--inactive__2ADFj\",\"BreathIndicators-itemTop--active\":\"BreathSpace_BreathIndicators-itemTop--active__20lj0\",\"BreathIndicators-itemRight--active\":\"BreathSpace_BreathIndicators-itemRight--active__2ZUoo\",\"BreathIndicators-itemBottom--active\":\"BreathSpace_BreathIndicators-itemBottom--active__3_7kJ\",\"BreathIndicators-itemLeft--active\":\"BreathSpace_BreathIndicators-itemLeft--active__Qb5Cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SpinnerWrapper\":\"HeroSpace_SpinnerWrapper__I86gV\",\"Spinner\":\"HeroSpace_Spinner__3RwwV\",\"sk-scaleout\":\"HeroSpace_sk-scaleout__22-fL\",\"HeroSpace\":\"HeroSpace_HeroSpace__1nSim\",\"HeroSection\":\"HeroSpace_HeroSection__54HVx\",\"HeroSection-logo\":\"HeroSpace_HeroSection-logo__11ihV\",\"HeroSection-button\":\"HeroSpace_HeroSection-button__3YyER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Setup\":\"SetupBreath_Setup__33p53\",\"Setup-container\":\"SetupBreath_Setup-container__ye6aT\",\"Setup-left\":\"SetupBreath_Setup-left__3_B96\",\"Setup-right\":\"SetupBreath_Setup-right__23e_K\",\"Setup-title\":\"SetupBreath_Setup-title__1eMrE\",\"Setup-desc\":\"SetupBreath_Setup-desc__9XArU\",\"SetupSummary\":\"SetupBreath_SetupSummary__2OL64\",\"SetupSummary-item\":\"SetupBreath_SetupSummary-item__2t1rh\",\"SetupSummary-value\":\"SetupBreath_SetupSummary-value__5quh-\",\"SetupSummary-sec\":\"SetupBreath_SetupSummary-sec__3Yjtt\",\"SetupSummary-label\":\"SetupBreath_SetupSummary-label__1TtZq\",\"SetupSummary-item--inhale\":\"SetupBreath_SetupSummary-item--inhale__11RNI\",\"SetupSummary-item--holdInhale\":\"SetupBreath_SetupSummary-item--holdInhale__AYdFZ\",\"SetupSummary-item--exhale\":\"SetupBreath_SetupSummary-item--exhale___Cn-7\",\"SetupSummary-item--holdExhale\":\"SetupBreath_SetupSummary-item--holdExhale__3U7pV\",\"SetupForm-submit\":\"SetupBreath_SetupForm-submit__3nU5I\",\"SetupForm\":\"SetupBreath_SetupForm__2G4SQ\",\"SetupFormGroup\":\"SetupBreath_SetupFormGroup__sgyD8\",\"SetupFormGroup-header\":\"SetupBreath_SetupFormGroup-header__3Xg7E\",\"SetupFormGroup-label\":\"SetupBreath_SetupFormGroup-label__3bUrz\",\"SetupFormGroup-label--em\":\"SetupBreath_SetupFormGroup-label--em__2mYWH\",\"SetupFormGroup-content\":\"SetupBreath_SetupFormGroup-content__1fyfy\",\"SetupFormGroup-input\":\"SetupBreath_SetupFormGroup-input__1x_eh\",\"SetupFormGroup-value\":\"SetupBreath_SetupFormGroup-value__N4CxD\",\"SetupFormGroup-seconds\":\"SetupBreath_SetupFormGroup-seconds__2OT7n\",\"SetupFormGroup-number\":\"SetupBreath_SetupFormGroup-number__GFadb\",\"SetupFormGroup-letter\":\"SetupBreath_SetupFormGroup-letter__XZt9O\",\"SetupFormGroup--inhale\":\"SetupBreath_SetupFormGroup--inhale__25VwF\",\"SetupFormGroup--holdInhale\":\"SetupBreath_SetupFormGroup--holdInhale__HfBLf\",\"SetupFormGroup--exhale\":\"SetupBreath_SetupFormGroup--exhale__2K6S1\",\"SetupFormGroup--holdExhale\":\"SetupBreath_SetupFormGroup--holdExhale__2DcR3\",\"SetupTime\":\"SetupBreath_SetupTime__1MwO7\",\"SetupTime-label\":\"SetupBreath_SetupTime-label__2B465\",\"SetupTime-input\":\"SetupBreath_SetupTime-input__1CJdj\",\"Setup-close\":\"SetupBreath_Setup-close__24W_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2SgUB\"};","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {ReportHandler} from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useEffect, useState, useRef} from \"react\";\nimport {gsap} from \"gsap\";\n\nimport styles from \"./HeroSpace.module.scss\";\n\ntype AppProps = {\n  openConfigOpen: () => void;\n};\n\nconst HeroSpace: React.FC<AppProps> = (props: AppProps) => {\n  const {openConfigOpen} = props;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const timeline = gsap.timeline({paused: true});\n  const heroSpaceRef = useRef(null);\n  const logoRef = useRef(null);\n  const buttonRef = useRef(null);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      timeline\n        .to(heroSpaceRef.current, {\n          duration: 1,\n          opacity: 1,\n          ease: \"power2.inOut\",\n        })\n        .to(logoRef.current, {opacity: 1, duration: 0.5}, 0.2)\n        .to(buttonRef.current, {opacity: 1, duration: 0.6}, 0.2);\n\n      timeline.play();\n    }\n  }, [isLoading, timeline]);\n\n  return isLoading ? (\n    <div className={styles[\"SpinnerWrapper\"]}>\n      <div className={styles[\"Spinner\"]}></div>\n    </div>\n  ) : (\n    <>\n      <main className={styles[\"HeroSpace\"]} ref={heroSpaceRef}>\n        <section className={styles[\"HeroSection\"]}>\n          <img\n            className={styles[\"HeroSection-logo\"]}\n            src=\"/images/Logo.png\"\n            alt=\"logo\"\n            ref={logoRef}\n          />\n          <button\n            className={styles[\"HeroSection-button\"]}\n            ref={buttonRef}\n            onClick={openConfigOpen}\n          >\n            Begin Breathing\n          </button>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default HeroSpace;\n","import {Settings} from \"./types\";\n\nexport function timeToSeconds(time: string): number {\n  const [minutes, seconds] = time.split(\":\");\n  return Number(minutes) * 60 + Number(seconds);\n}\n\nexport function calculateCycles(settings: Settings): number {\n  const {inhaleTime, holdInhaleTime, exhaleTime, holdExhaleTime} = settings;\n  const seconds = timeToSeconds(settings.time);\n  const cycle = inhaleTime + holdInhaleTime + exhaleTime + holdExhaleTime;\n\n  return Math.trunc(seconds / cycle);\n}\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport {gsap} from \"gsap\";\nimport classNames from \"classnames\";\nimport {FiX} from \"react-icons/fi\";\nimport Countdown from \"react-countdown\";\n\nimport styles from \"./BreathSpace.module.scss\";\n\nimport {timeToSeconds} from \"utils/breathUtils\";\nimport {SettingsType} from \"utils/types\";\n\ntype AppProps = {\n  isStarted: boolean;\n  settings: SettingsType;\n  stopBreathing: () => void;\n};\n\nconst BreathSpace: React.FC<AppProps> = (props: AppProps) => {\n  const {isStarted, settings, stopBreathing} = props;\n  const [duration, setDuration] = useState(0);\n\n  const boxTimeline = useMemo(\n    () =>\n      gsap.timeline({\n        paused: true,\n        repeat: -1,\n      }),\n    [],\n  );\n\n  const container = useRef(null);\n  const barTop = useRef(null);\n  const barRight = useRef(null);\n  const barBottom = useRef(null);\n  const barLeft = useRef(null);\n  const indicatorTop = useRef(null);\n  const indicatorRight = useRef(null);\n  const indicatorBottom = useRef(null);\n  const indicatorLeft = useRef(null);\n  const refInhale = useRef(null);\n  const refHoldInhale = useRef(null);\n  const refExhale = useRef(null);\n  const refHoldExhale = useRef(null);\n  const refTime = useRef(null);\n\n  const exitBreathing = () => {\n    gsap.to(container.current, {\n      opacity: 0,\n      duration: 1,\n    });\n    gsap.to(refTime.current, {\n      opacity: 0,\n      duration: 1,\n    });\n\n    boxTimeline.pause(0);\n    boxTimeline.clear();\n    boxTimeline.restart();\n\n    setDuration(0);\n    stopBreathing();\n  };\n\n  const countdownRenderer = ({minutes, seconds, completed}: any) => {\n    if (completed) {\n      return <span>Done</span>;\n    } else {\n      return (\n        <span>\n          {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n        </span>\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (\n      isStarted &&\n      !(Object.keys(settings).length === 0 && settings.constructor === Object)\n    ) {\n      console.log(isStarted, settings);\n      const inhaleSeconds = settings.inhaleTime;\n      const inhaleHoldSeconds = settings.inhaleTime + settings.holdInhaleTime;\n      const inhaleHoldExhaleSeconds =\n        settings.inhaleTime + settings.holdInhaleTime + settings.exhaleTime;\n      const inhaleHoldExhaleHoldSeconds =\n        settings.inhaleTime +\n        settings.holdInhaleTime +\n        settings.exhaleTime +\n        settings.holdExhaleTime;\n\n      const miliseconds = timeToSeconds(settings.time) * 1000 + 500;\n      setDuration(miliseconds);\n\n      boxTimeline.restart();\n      boxTimeline\n        // Clear Props because gsap sucks dick\n        .to(barBottom.current, {clearProps: \"all\", duration: 0}, 0)\n        .to(barLeft.current, {clearProps: \"all\", duration: 0}, 0)\n\n        // Inhale\n        .to(refInhale.current, {opacity: 1, duration: 0.3}, 0)\n        .to(indicatorTop.current, {opacity: 1, duration: 0.3}, 0)\n        .to(\n          barTop.current,\n          {\n            width: \"calc(100% - 30px)\",\n            duration: settings.inhaleTime,\n            ease: \"none\",\n          },\n          0,\n        )\n\n        // Hold Inhale\n        .to(refInhale.current, {opacity: 0, duration: 0.3}, inhaleSeconds)\n        .to(\n          refHoldInhale.current,\n          {opacity: 1, duration: 0.3},\n          inhaleSeconds + 0.3,\n        )\n        .to(\n          indicatorRight.current,\n          {opacity: 1, duration: 0.3},\n          inhaleSeconds - 0.1,\n        )\n        .to(\n          barRight.current,\n          {\n            height: \"calc(100% - 30px)\",\n            duration: settings.holdInhaleTime,\n            ease: \"none\",\n          },\n          inhaleSeconds,\n        )\n\n        // Exhale\n        .to(\n          refHoldInhale.current,\n          {opacity: 0, duration: 0.3},\n          inhaleHoldSeconds,\n        )\n        .to(\n          refExhale.current,\n          {opacity: 1, duration: 0.3},\n          inhaleHoldSeconds + 0.3,\n        )\n        .to(\n          indicatorBottom.current,\n          {opacity: 1, duration: 0.3},\n          inhaleHoldSeconds - 0.1,\n        )\n        .to(\n          barBottom.current,\n          {\n            width: \"calc(100% - 30px)\",\n            duration: settings.exhaleTime,\n            ease: \"none\",\n          },\n          inhaleHoldSeconds,\n        )\n\n        // Hold Exhale\n        .to(\n          refExhale.current,\n          {opacity: 0, duration: 0.3},\n          inhaleHoldExhaleSeconds,\n        )\n        .to(\n          refHoldExhale.current,\n          {opacity: 1, duration: 0.3},\n          inhaleHoldExhaleSeconds + 0.3,\n        )\n        .to(\n          indicatorLeft.current,\n          {opacity: 1, duration: 0.3},\n          inhaleHoldExhaleSeconds - 0.1,\n        )\n        .to(\n          barLeft.current,\n          {\n            height: \"calc(100% - 30px)\",\n            duration: settings.holdExhaleTime,\n            ease: \"none\",\n          },\n          inhaleHoldExhaleSeconds,\n        )\n\n        // Revert all bars\n        .to(\n          barTop.current,\n          {\n            right: 0,\n            left: \"inherit\",\n            width: 0,\n            opacity: 0,\n            ease: \"power1.out\",\n            duration: 0.2,\n          },\n          inhaleHoldExhaleHoldSeconds - 0.6,\n        )\n        .to(\n          barRight.current,\n          {\n            bottom: 0,\n            top: \"inherit\",\n            height: 0,\n            ease: \"power1.out\",\n            duration: 0.25,\n          },\n          inhaleHoldExhaleHoldSeconds - 0.4,\n        )\n        .to(\n          barBottom.current,\n          {\n            left: 0,\n            right: \"inherit\",\n            width: 0,\n            ease: \"power1.out\",\n            duration: 0.2,\n          },\n          inhaleHoldExhaleHoldSeconds - 0.2,\n        )\n        .to(\n          barLeft.current,\n          {\n            top: 0,\n            bottom: \"inherit\",\n            height: 0,\n            ease: \"power1.out\",\n            opacity: 0,\n            duration: 0.2,\n          },\n          inhaleHoldExhaleHoldSeconds,\n        )\n\n        // Revert last text box\n        .to(\n          refHoldExhale.current,\n          {opacity: 0, duration: 0.3},\n          inhaleHoldExhaleHoldSeconds,\n        )\n\n        // Revert indicators\n        .to(\n          indicatorTop.current,\n          {opacity: 0, duration: 0.2},\n          inhaleHoldExhaleHoldSeconds - 0.6,\n        )\n        .to(\n          indicatorRight.current,\n          {opacity: 0, duration: 0.2},\n          inhaleHoldExhaleHoldSeconds - 0.4,\n        )\n        .to(\n          indicatorBottom.current,\n          {opacity: 0, duration: 0.2},\n          inhaleHoldExhaleHoldSeconds - 0.2,\n        )\n        .to(\n          indicatorLeft.current,\n          {opacity: 0, duration: 0.2},\n          inhaleHoldExhaleHoldSeconds,\n        );\n\n      gsap.to(container.current, {opacity: 1, duration: 0.5, delay: 0.5});\n      gsap.to(refTime.current, {opacity: 1, duration: 0.5, delay: 0.5});\n      boxTimeline.play();\n    }\n  }, [isStarted, boxTimeline, settings]);\n\n  return (\n    <div className={styles[\"BreathSpace\"]}>\n      <div\n        ref={container}\n        className={classNames(\"\", styles[\"BreathSpace-container\"])}\n      >\n        <header className={styles[\"BreathSpace-header\"]}>\n          <button\n            className={styles[\"BreathSpace-close\"]}\n            onClick={exitBreathing}\n          >\n            <FiX />\n          </button>\n        </header>\n\n        <div className={styles[\"BreathInfo\"]}>\n          <div ref={refInhale} className={styles[\"BreathText\"]}>\n            <h3 className={styles[\"BreathText-phase\"]}>Inhale</h3>\n            <div\n              className={classNames(\n                styles[\"BreathText-line\"],\n                styles[\"BreathText-line--inhale\"],\n              )}\n            ></div>\n            <p className={styles[\"BreathText-tips\"]}>\n              Direct your breath to lower ribs, expand your chest 360°, keep\n              belly tight.\n            </p>\n          </div>\n          <div ref={refHoldInhale} className={styles[\"BreathText\"]}>\n            <h3 className={styles[\"BreathText-phase\"]}>Hold</h3>\n            <div\n              className={classNames(\n                styles[\"BreathText-line\"],\n                styles[\"BreathText-line--holdInhale\"],\n              )}\n            ></div>\n            <p className={styles[\"BreathText-tips\"]}>\n              Relax muscles of your neck and shoulders.\n            </p>\n          </div>\n          <div ref={refExhale} className={styles[\"BreathText\"]}>\n            <h3 className={styles[\"BreathText-phase\"]}>Exhale</h3>\n            <div\n              className={classNames(\n                styles[\"BreathText-line\"],\n                styles[\"BreathText-line--exhale\"],\n              )}\n            ></div>\n            <p className={styles[\"BreathText-tips\"]}>\n              Should be calm and done using your nose.\n            </p>\n          </div>\n          <div ref={refHoldExhale} className={styles[\"BreathText\"]}>\n            <h3 className={styles[\"BreathText-phase\"]}>Hold</h3>\n            <div\n              className={classNames(\n                styles[\"BreathText-line\"],\n                styles[\"BreathText-line--holdExhale\"],\n              )}\n            ></div>\n            <p ref={refTime} className={styles[\"BreathText-tips\"]}>\n              Try to experience every part of your body.\n            </p>\n          </div>\n        </div>\n        <div className={styles[\"BreathVisuals\"]}>\n          <div className={styles[\"BreathBox\"]}>\n            <div>\n              <div\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barTop\"],\n                  styles[\"BreathBox-bar--inactive\"],\n                )}\n              ></div>\n              <div\n                ref={barTop}\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barTop\"],\n                  styles[\"BreathBox-barTop--active\"],\n                )}\n              ></div>\n            </div>\n            <div>\n              <div\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barRight\"],\n                  styles[\"BreathBox-bar--inactive\"],\n                )}\n              ></div>\n              <div\n                ref={barRight}\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barRight\"],\n                  styles[\"BreathBox-barRight--active\"],\n                )}\n              ></div>\n            </div>\n            <div>\n              <div\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barBottom\"],\n                  styles[\"BreathBox-bar--inactive\"],\n                )}\n              ></div>\n              <div\n                ref={barBottom}\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barBottom\"],\n                  styles[\"BreathBox-barBottom--active\"],\n                )}\n              ></div>\n            </div>\n            <div>\n              <div\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barLeft\"],\n                  styles[\"BreathBox-bar--inactive\"],\n                )}\n              ></div>\n              <div\n                ref={barLeft}\n                className={classNames(\n                  styles[\"BreathBox-bar\"],\n                  styles[\"BreathBox-barLeft\"],\n                  styles[\"BreathBox-barLeft--active\"],\n                )}\n              ></div>\n            </div>\n            <p ref={refTime} className={styles[\"BreathBox-timeLeft\"]}>\n              {duration > 0 ? (\n                <Countdown\n                  date={Date.now() + duration}\n                  renderer={countdownRenderer}\n                />\n              ) : null}\n            </p>\n          </div>\n          <div className={styles[\"BreathIndicators\"]}>\n            <div className={styles[\"BreathIndicators-group\"]}>\n              <span\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-item--inactive\"],\n                )}\n              ></span>\n              <span\n                ref={indicatorTop}\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-itemTop\"],\n                  styles[\"BreathIndicators-itemTop--active\"],\n                )}\n              ></span>\n            </div>\n            <div className={styles[\"BreathIndicators-group\"]}>\n              <span\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-item--inactive\"],\n                )}\n              ></span>\n              <span\n                ref={indicatorRight}\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-itemRight\"],\n                  styles[\"BreathIndicators-itemRight--active\"],\n                )}\n              ></span>\n            </div>\n            <div className={styles[\"BreathIndicators-group\"]}>\n              <span\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-item--inactive\"],\n                )}\n              ></span>\n              <span\n                ref={indicatorBottom}\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-itemBottom\"],\n                  styles[\"BreathIndicators-itemBottom--active\"],\n                )}\n              ></span>\n            </div>\n            <div className={styles[\"BreathIndicators-group\"]}>\n              <span\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-item--inactive\"],\n                )}\n              ></span>\n              <span\n                ref={indicatorLeft}\n                className={classNames(\n                  styles[\"BreathIndicators-item\"],\n                  styles[\"BreathIndicators-itemLeft\"],\n                  styles[\"BreathIndicators-itemLeft--active\"],\n                )}\n              ></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BreathSpace;\n","import React, {useEffect, useRef, useMemo} from \"react\";\nimport {gsap} from \"gsap\";\nimport classNames from \"classnames\";\nimport {useFormik} from \"formik\";\nimport MaskedInput from \"react-text-mask\";\n\nimport {FiX} from \"react-icons/fi\";\n\nimport styles from \"./SetupBreath.module.scss\";\n\nimport {Settings} from \"utils/types\";\n\n// TODO - RDW & Input Validation\n\ntype AppProps = {\n  isConfigOpen: boolean;\n  closeConfigOpen: () => void;\n  startBreathing: () => void;\n  setBreathingSettings: (settings: Settings) => void;\n};\n\nconst SetupBreath: React.FC<AppProps> = (props: AppProps) => {\n  const {\n    isConfigOpen,\n    closeConfigOpen,\n    setBreathingSettings,\n    startBreathing,\n  } = props;\n\n  const formik = useFormik<Settings>({\n    initialValues: {\n      inhaleTime: 5,\n      holdInhaleTime: 5,\n      exhaleTime: 5,\n      holdExhaleTime: 5,\n      time: \"05:00\",\n    },\n    onSubmit: values => {\n      closeConfigOpen();\n      setBreathingSettings(values);\n      startBreathing();\n    },\n  });\n\n  const timeline = useMemo(\n    () => gsap.timeline({paused: true, reversed: false}),\n    [],\n  );\n\n  const setupContainer = useRef(null);\n  const form = useRef(null);\n\n  useEffect(() => {\n    timeline\n      .to(setupContainer.current, {display: \"block\", duration: 0})\n      .to(setupContainer.current, {\n        opacity: 1,\n        height: \"100vh\",\n        duration: 0.7,\n        backdropFilter: \"blur(15px)\",\n        ease: \"power2.inOut\",\n      })\n      .to(\n        form.current,\n        {\n          opacity: 1,\n          ease: \"power2.inOut\",\n          duration: 0.7,\n        },\n        0,\n      );\n  }, [timeline, setupContainer, form]);\n\n  useEffect(() => {\n    isConfigOpen ? timeline.play() : timeline.reverse();\n  }, [timeline, isConfigOpen]);\n\n  return (\n    <div className={styles[\"Setup\"]} ref={setupContainer}>\n      <button className={styles[\"Setup-close\"]} onClick={closeConfigOpen}>\n        <FiX />\n      </button>\n      <form\n        ref={form}\n        onSubmit={formik.handleSubmit}\n        className={classNames(\"container\", styles[\"Setup-container\"])}\n      >\n        <h2 className={styles[\"Setup-title\"]}>Setup Details</h2>\n        <p className={styles[\"Setup-desc\"]}>Adjust parameters</p>\n        <div className={styles[\"SetupForm\"]}>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--inhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Inhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"inhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"inhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.inhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"inhaleTime\"\n                  name=\"inhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.inhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--holdInhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Hold Inhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"holdInhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"holdInhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.holdInhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"holdInhaleTime\"\n                  name=\"holdInhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.holdInhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--exhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Exhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"exhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"exhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.exhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"exhaleTime\"\n                  name=\"exhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.exhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={classNames(\n              styles[\"SetupFormGroup\"],\n              styles[\"SetupFormGroup--holdExhale\"],\n            )}\n          >\n            <header className={styles[\"SetupFormGroup-header\"]}>\n              <label className={styles[\"SetupFormGroup-label\"]}>\n                Hold Exhale Time\n              </label>\n            </header>\n            <div className={styles[\"SetupFormGroup-content\"]}>\n              <input\n                id=\"holdExhaleTime\"\n                className={styles[\"SetupFormGroup-input\"]}\n                name=\"holdExhaleTime\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                onChange={formik.handleChange}\n                value={formik.values.holdExhaleTime}\n              />\n              <div className={styles[\"SetupFormGroup-number\"]}>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"30\"\n                  className={styles[\"SetupFormGroup-value\"]}\n                  id=\"holdExhaleTime\"\n                  name=\"holdExhaleTime\"\n                  onChange={formik.handleChange}\n                  value={formik.values.holdExhaleTime}\n                />\n                <span className={styles[\"SetupFormGroup-letter\"]}>s</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles[\"SetupTime\"]}>\n          <label htmlFor=\"time\" className={styles[\"SetupTime-label\"]}>\n            Time\n          </label>\n          {/* <input\n            id=\"time\"\n            name=\"time\"\n            className={styles[\"SetupTime-input\"]}\n            value={formik.values.time}\n            onChange={formik.handleChange}\n            type=\"text\"\n          /> */}\n          <MaskedInput\n            id=\"time\"\n            name=\"time\"\n            className={styles[\"SetupTime-input\"]}\n            value={formik.values.time}\n            onChange={formik.handleChange}\n            type=\"text\"\n            mask={[/[0-5]/, /[0-9]/, \":\", /[0-5]/, /[0-9]/]}\n          />\n        </div>\n        {/* <div className={styles[\"SetupOverview\"]}>\n          <div className={styles[\"SetupSummary\"]}>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--inhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.inhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Inhale</p>\n            </div>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--holdInhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.holdInhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Hold</p>\n            </div>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--exhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.exhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Exhale</p>\n            </div>\n            <div\n              className={classNames(\n                styles[\"SetupSummary-item\"],\n                styles[\"SetupSummary-item--holdExhale\"],\n              )}\n            >\n              <p className={styles[\"SetupSummary-value\"]}>\n                <span className={styles[\"SetupSummary-sec\"]}>\n                  {formik.values.holdExhaleTime}\n                </span>\n                s\n              </p>\n              <p className={styles[\"SetupSummary-label\"]}>Hold</p>\n            </div>\n          </div>\n        </div> */}\n        <button className={styles[\"SetupForm-submit\"]} type=\"submit\">\n          Start\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SetupBreath;\n","import React, {useState, useEffect, useRef, useMemo} from \"react\";\nimport WebFont from \"webfontloader\";\nimport {gsap} from \"gsap\";\n\nimport HeroSpace from \"components/HeroSpace\";\nimport BreathSpace from \"components/BreathSpace\";\nimport SetupBreath from \"components/SetupBreath\";\n\nimport \"styles/main.scss\";\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\nimport styles from \"./App.module.scss\";\n\nimport {SettingsType, Settings} from \"utils/types\";\n\nWebFont.load({\n  google: {\n    families: [\"Montserrat:400,600,700\"],\n  },\n});\n\nconst App: React.FC = () => {\n  const [isConfigOpen, setConfig] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [settings, setSettings] = useState<SettingsType>({\n    inhaleTime: 5,\n    holdInhaleTime: 5,\n    exhaleTime: 5,\n    holdExhaleTime: 5,\n    time: \"00:00\",\n  });\n\n  const appContainer = useRef(null);\n  const timeline = useMemo(\n    () =>\n      gsap.timeline({\n        paused: true,\n        reversed: false,\n      }),\n    [],\n  );\n\n  useEffect(() => {\n    timeline.to(\n      appContainer.current,\n      {\n        translateY: \"-100vh\",\n        duration: 1,\n        ease: \"power3.inOut\",\n      },\n      0,\n    );\n  }, [timeline]);\n\n  useEffect(() => {\n    isStarted && !isConfigOpen ? timeline.play() : timeline.reverse();\n  }, [isStarted, isConfigOpen, timeline]);\n\n  const setBreathingSettings = (settings: Settings) => {\n    setSettings(settings);\n  };\n\n  const startBreathing = () => {\n    setIsStarted(true);\n  };\n\n  const stopBreathing = () => {\n    setIsStarted(false);\n    setSettings({});\n  };\n\n  const openConfigOpen = () => {\n    setConfig(true);\n  };\n\n  const closeConfigOpen = () => {\n    setConfig(false);\n  };\n\n  return (\n    <div ref={appContainer} className={styles[\"App\"]}>\n      <HeroSpace openConfigOpen={openConfigOpen} />\n      <BreathSpace\n        isStarted={isStarted}\n        settings={settings}\n        stopBreathing={stopBreathing}\n      />\n      <SetupBreath\n        isConfigOpen={isConfigOpen}\n        closeConfigOpen={closeConfigOpen}\n        startBreathing={startBreathing}\n        setBreathingSettings={setBreathingSettings}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"utils/reportWebVitals\";\n\nimport App from \"containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}